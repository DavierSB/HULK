type Point(x, y)
{
    x = x;
    y = y;
    getX() => self.x;
    setX(x) => self.x := x;
    getY() => self.y;
    setY(y) => self.y := y;
}
type PolarPoint(z) inherits Point(0, 0)
{
    z = z;

    getZ() => self.z;
    setZ(z) => self.z := z;
}
let p = new PolarPoint(3) in 
{
    print(p.getX());
    print(p.getZ());
    p.setX(5);
    print(p.getX());
}





type A
{
    super() => 7;
}
type B inherits A
{
    super() => 6;
}
type C inherits A
{
    super() => 5;
}
let x : A = if (rand() < 0.5) new B() else new C()
in
if (x is B){
x := x as B;
print(x.super());}
else print("No esta vez");


type A{}
type B inherits A
{
    putB() {print("Pues putB tigre"); 42;}
}
type C inherits A
{
    putC() {print("mentira, putC"); 42;}
}
let x : A = if(rand() < 0.5) new B() else new C() in
    if (x is B)
        let y : B = x as B in y.putB()
    else
        let y : C = x as C in y.putC();


#type A{}
#type B inherits A{}
#let k = new A() in
#let j = new B() in
#k := j;



function cot(x) => 1 / tan(x);
function tan(x) => sin(x) / cos(x);

print(tan(PI) ** 2 + cot(PI) ** 2);


let number = 42, text = "The meaning of life is" in
print(text@42);


let a = 6, b = a * 7 in print(b);

let a = 0 in{
    print(a);
    a := 1;
    print(a);
}


let a = 42, mod = a % 3 in
print(
    if (mod == 0) "Magic"
    elif (mod % 3  == 1) "Woke"
    else "Dumb"
);


let a = 10 in while (a >= 0){
    print(a);
    a := a - 1;
}


type Point 
{
    x = 0;
    y = 0;
    
    getX() => self.x;
    getY() => self.y;

    setX(x) => self.x := x;
    setY(y) => self.y := y;
}
let pt = new Point() in
print("x: " @ pt.getX() @ "; y: " @ pt.getY());


type Point (x, y)
{
x = x;
y = y;
getX() => self.x;
getY() => self.y;
setX(x) => self.x := x;
setY(y) => self.y := y;
}
type PolarPoint inherits Point
{
    rho() => sqrt(self.getX() ^ 2 + self.getY() ^ 2);
}
let pt = new PolarPoint(3, 4) in
print("rho: " @ pt.rho());


type Person(firstname, lastname){
    firstname = firstname;
    lastname = lastname;
    name() => self.firstname @@ self.lastname
}
type Knight inherits Person{
    name() => "Sir" @@ base();
}
let p = new Knight("Phil", "Collins") in
print(p.name());



type A(x : Number)
{
    x = x;
    super() => 7;
}
type B inherits A
{
    super() => base() + 3 + self.x;
}
type C inherits B
{
    z = 100;
    super() => base() + base() + self.z;
}
type D inherits C
{
    super() => base() + base();
}
let d = new D(30) in print(d.super());



type A(x, y)
{
    self.x = x;
    self.y = y;
    suma() => x + y;
}
let g = new A("Hola", "Mundo") in print(g);